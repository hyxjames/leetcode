/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> result;
        if(root == NULL){
            return result;
        } else{
            int val = root->val;
            vector<string> left = binaryTreePaths(root->left);
            vector<string> right = binaryTreePaths(root->right);
            if(left.size()==0 && right.size()==0){
                result.push_back(to_string(root->val));
            } else{
                for(int i=0;i<left.size();i++){
                    string str = to_string(root->val).append("->");
                    str.append(left[i]);
                    result.push_back(str);
                }
                for(int i=0;i<right.size();i++){
                    string str = to_string(root->val).append("->");
                    str.append(right[i]);
                    result.push_back(str);
                }
            }
        }
        return result;
    }
};
