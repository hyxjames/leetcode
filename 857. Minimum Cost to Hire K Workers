class Solution {
public:
    static bool mycomp(pair<int,int> p1, pair<int,int> p2){
        return p1.first < p2.first;
    }
    
    double mincostToHireWorkers(vector<int>& quality, vector<int>& wage, int K) {
        double result = INT_MAX;
        vector<pair<int, int>> workers;
        for(int i=0;i<quality.size();i++){
            pair<int, int> p;
            p.first = quality[i];
            p.second = wage[i];
            workers.push_back(p);
        }
        sort(workers.begin(),workers.end(), mycomp);
        for(int cap=0;cap<workers.size();cap++){
            double ratio = (double)workers[cap].second/workers[cap].first;
            double price = workers[cap].second;
            int cnt = 1;
            for(int i=0;i<workers.size()&&cnt<K;i++){
                if(i==cap || (double)workers[i].second/workers[i].first > ratio){
                    ;
                } else{
                    price += ratio*workers[i].first;
                    cnt++;
                    //cout<<cnt<<": "<<ratio<<", "<<price<<endl;
                }
            }
            if(cnt==K)
                result = min(price, result);
        }
        return result;
    }
};
