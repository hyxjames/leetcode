class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> result;
        vector<string> res;
        dfs(result, res, s, 0);
        return result;
    }
    
    void dfs(vector<vector<string>>& result, vector<string>& res, string& s, int pos){
        if(pos == s.size()){
            result.push_back(res);
        } else{
            for(int i=pos;i<s.size();i++){
                if(isPalin(s, pos, i)){
                    res.push_back(s.substr(pos, i-pos+1));
                    dfs(result, res, s, i+1);
                    res.pop_back();
                }
            }
        }
    }
    
    bool isPalin(string& s, int begin, int end){
        while(end>=begin){
            if(s[end] != s[begin]){
                return false;
            } else{
                begin++;
                end--;
            }
        }
        return true;
    }
};
