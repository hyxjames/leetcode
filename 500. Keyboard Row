class Solution {
public:
    vector<string> findWords(vector<string>& words) {
        unordered_set<char> row1({'q','w','e','r','t','y','u','i','o','p'});
        unordered_set<char> row2({'a','s','d','f','g','h','j','k','l'});
        unordered_set<char> row3({'z','x','c','v','b','n','m'});
        vector<string> result;
        bool flag = true;
        for(int i=0;i<words.size();i++){
            string str = words[i];
            transform(str.begin(), str.end(), str.begin(), ::tolower);
            flag = true;
            if(row1.find(str[0]) != row1.end()){
                for(int j=0;j<str.size();j++){
                    if(row1.find(str[j]) == row1.end()){
                        flag = false;
                        break;
                    }
                }
            } else if(row2.find(str[0]) != row2.end()){
                for(int j=0;j<str.size();j++){
                    if(row2.find(str[j]) == row2.end()){
                        flag = false;
                        break;
                    }
                }
            } else if(row3.find(str[0]) != row3.end()){
                for(int j=0;j<str.size();j++){
                    if(row3.find(str[j]) == row3.end()){
                        flag = false;
                        break;
                    }
                }
            }
            if(flag){
                result.push_back(words[i]);
            }
        }
        return result;
    }
};
