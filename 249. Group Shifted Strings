class Solution {
public:
    vector<vector<string>> groupStrings(vector<string>& strings) {
        unordered_map<string, vector<string>> map;
        for(int i=0;i<strings.size();i++){
            string key = generateKey(strings[i]);
            if(map.find(key) == map.end()){
                vector<string> vec;
                map[key] = vec;
            }
            map[key].push_back(strings[i]);
        }
        vector<vector<string>> result;
        for(auto it=map.begin();it!=map.end();it++){
            result.push_back(it->second);
        }
        return result;
    }
    
    string generateKey(string str){
        string result;
        char c = str[0];
        result.push_back(' ');
        for(int i=1;i<str.size();i++){
            result.push_back(',');
            int diff = str[i]-c;
            if(diff<0) diff = 26+diff;
            result.append(to_string(diff));
        }
        return result;
    }
};
