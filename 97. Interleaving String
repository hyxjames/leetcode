class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        if(s1.size()+s2.size() != s3.size())
            return false;
        vector<vector<bool>> dp(s1.size()+1, vector<bool>(s2.size()+1, false));
        dp[0][0] = true;
        for(int i=0;i<dp.size();i++){
            for(int j=0;j<dp[0].size();j++){
                if(i==0 && j==0){
                    continue;
                } else if(i==0){
                    dp[0][j] = (s3[j-1] == s2[j-1]) && dp[0][j-1];
                } else if(j==0){
                    dp[i][0] = (s3[i-1] == s1[i-1] && dp[i-1][0]);
                } else{
                    if((s1[i-1]==s3[i+j-1] && dp[i-1][j]) || (s2[j-1]==s3[i+j-1] && dp[i][j-1])){
                        dp[i][j] = true;
                    } else{
                        dp[i][j] = false;
                    }
                }
            }
        }
        for(int i=0;i<dp.size();i++){
            for(int j=0;j<dp[0].size();j++){
                cout<<dp[i][j]<<", ";
            }
            cout<<endl;
        }
        return dp[s1.size()][s2.size()];
    }
};
