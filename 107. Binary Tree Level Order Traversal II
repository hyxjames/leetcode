/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> result;
        queue<TreeNode*> q;
        if(root!=NULL){
            q.push(root);
            q.push(NULL);
        }
        vector<int> v;
        while(!q.empty()){
            TreeNode* t = q.front();
            q.pop();
            if(t==NULL){
                if(q.empty()){
                    result.push_back(v);
                    break;
                } else{
                    q.push(NULL);
                    result.push_back(v);
                    /*for(int i=0;i<v.size();i++){
                        cout<<v[i]<<', ';
                    }
                    cout<<endl;*/
                    v.clear();
                }
            } else{
                v.push_back(t->val);
                cout<<t->val<<endl;
                if(t->left != NULL){
                    q.push(t->left);
                }
                if(t->right != NULL){
                    q.push(t->right);
                }
            }
        }
        reverse(result.begin(), result.end());
        return result;
    }
};
