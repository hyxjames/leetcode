class Solution {
public:
    bool canCross(vector<int>& stones) {
        vector<vector<int>> jumps(stones.size(), vector<int>());
        for(int i=0;i<stones.size()-1;i++){
            if(i==0){
                if(stones[0]+1 == stones[1]){
                    jumps[1].push_back(1);
                } else{
                    return false;
                }
            } else{
                for(int j=1;j<i+1;j++){
                    for(int k=0;k<jumps[j].size();k++){
                        if(stones[i+1]==stones[j]+jumps[j][k]){
                            jumps[i+1].push_back(jumps[j][k]);
                        } else if(stones[i+1]==stones[j]+jumps[j][k]+1){
                            jumps[i+1].push_back(jumps[j][k]+1);
                        } else if(stones[i+1]==stones[j]+jumps[j][k]-1){
                            jumps[i+1].push_back(jumps[j][k]-1);
                        }
                    }
                }
            }
        }
        return jumps[jumps.size()-1].size()>0;
    }
};
