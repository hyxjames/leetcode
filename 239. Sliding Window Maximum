class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        deque<pair<int,int>> dq;//pos, value
        vector<int> result;
        for(int i=0;i<nums.size();i++){
            if(dq.empty() || dq.back().second>nums[i]){
                dq.push_back(make_pair(i, nums[i]));
            } else if(dq.back().second <= nums[i]){
                while(!dq.empty() && dq.back().second <= nums[i]) dq.pop_back();
                dq.push_back(make_pair(i, nums[i]));
            }
            if(i>=k-1){
                //cout<<i<<": "<<dq.front().second<<endl;
                result.push_back(dq.front().second);
            }
            if(i-dq.front().first >= k-1){
                //cout<<"pop "<<i<<": "<<dq.front().first<<", "<<dq.front().second<<endl;
                dq.pop_front();
            }
        }
        return result;
    }
};
