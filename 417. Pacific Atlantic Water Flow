class Solution {
public:
    vector<pair<int, int>> pacificAtlantic(vector<vector<int>>& matrix) {
        vector<pair<int,int>> result;
        if(matrix.size()==0)
            return result;
        bool flowMat[matrix.size()][matrix[0].size()][2] = {false};
        for(int i=0;i<matrix.size();i++){
            for(int j=0;j<matrix[0].size();j++){
                if(i==0 || j==0){
                    flowMat[i][j][0] = true;
                } else{
                    if(flowMat[i-1][j][0] && matrix[i-1][j]<=matrix[i][j]){
                        flowMat[i][j][0] = true;
                    } else if(flowMat[i][j-1][0] && matrix[i][j-1]<=matrix[i][j]){
                        flowMat[i][j][0] = true;
                    } else{
                        flowMat[i][j][0] = false;
                    }
                }
            }
        }
        for(int i=matrix.size()-1;i>=0;i--){
            for(int j=matrix[0].size()-1;j>=0;j--){
                if(i==matrix.size()-1 || j==matrix[0].size()-1){
                    flowMat[i][j][1] = true;
                } else{
                    if(flowMat[i+1][j][1] && matrix[i+1][j]<=matrix[i][j]){
                        flowMat[i][j][1] = true;
                    } else if(flowMat[i][j+1][1] && matrix[i][j+1]<=matrix[i][j]){
                        flowMat[i][j][1] = true;
                    } else{
                        flowMat[i][j][1] = false;
                    }
                }
                if(flowMat[i][j][0] && flowMat[i][j][1]){
                    result.push_back(make_pair(i,j));
                }
            }
        }
        return result;
    }
};
