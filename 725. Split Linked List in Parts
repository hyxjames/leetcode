/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    vector<ListNode*> splitListToParts(ListNode* root, int k) {
        vector<ListNode*> result;
        int size = 0;
        ListNode* cur = root;
        while(cur != NULL){
            size++;
            cur = cur->next;
        }
        cur = root;
        int index = 0;
        ListNode* prev = NULL;
        while(index < size && result.size()<k){
            int l = ceil((size-index)/(double)(k-result.size()));
            result.push_back(cur);
            if(prev != NULL) prev->next = NULL;
            for(int i=0;i<l;i++){
                prev = cur;
                cur = cur->next;
                index++;
            }
        }
        for(int i=result.size();i<k;i++){
            result.push_back(NULL);
        }
        return result;
    }
};
