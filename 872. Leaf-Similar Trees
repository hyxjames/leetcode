/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        vector<int> r1;
        vector<int> r2;
        dfs(root1, r1);
        dfs(root2, r2);
        if(r1.size()==r2.size()){
            for(int i=0;i<r1.size();i++){
                if(r1[i] != r2[i]){
                    return false;
                }
            }
            return true;
        } else{
            return false;
        }
    }
    
    void dfs(TreeNode* root, vector<int>& v){
        if(!root){
            return;
        }
        if(!root->left && !root->right){
            v.push_back(root->val);
        } else{
            if(root->left){
                dfs(root->left, v);
            }
            if(root->right){
                dfs(root->right, v);
            }
        }
    }
};
