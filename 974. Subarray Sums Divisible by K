class Solution {
public:
    int subarraysDivByK(vector<int>& A, int K) {
        if(A.size()==0) return 0;
        int result = 0;
        vector<int> prefix(A.size()+1, 0);
        unordered_map<int,int> map;
        map[0] = 1;
        for(int i=0;i<A.size();i++){
            prefix[i+1] = prefix[i]+A[i];
            int target = (prefix[i+1]-K)%K;
            if(target<0) target += K;
            result += map[target];
            int modSum = prefix[i+1]%K;
            if(modSum<0) modSum += K;
            map[modSum]++;
        }
        return result;
    }
};
