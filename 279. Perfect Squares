class Solution {
public:
    int numSquares(int n) {
        vector<int> choices;
        int i = 1;
        while(i*i<=n){
            choices.push_back(i*i);
            i++;
        }
        int level = 0;
        queue<int> q;
        q.push(n);
        int size = 1;
        while(!q.empty()){
            int target = q.front();
            q.pop();
            size--;
            if(target==0) break;
            bool isFind = false;
            for(int i=choices.size()-1;i>=0;i--){
                if(choices[i] < target){
                    q.push(target-choices[i]);
                } else if(choices[i]==target){
                    level++;
                    isFind = true;
                    break;
                }
            }
            if(isFind) break;
            if(size==0){
                level++;
                size = q.size();
            }
        }
        return level;
    }
};
