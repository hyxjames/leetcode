class Solution {
public:
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<vector<int>> result;
        vector<int> vec;
        sort(nums.begin(),nums.end());
        dfs(result, vec, nums, 0);
        return result;
    }
    
    void dfs(vector<vector<int>>& result, vector<int>& vec, vector<int>& nums, int pos){
        result.push_back(vec);
        if(pos==nums.size()) return;
        for(int i=pos;i<nums.size();i++){
            if(i==pos || nums[i]!=nums[i-1]){
                vec.push_back(nums[i]);
                dfs(result, vec, nums, i+1);
                vec.pop_back();
            }
        }
    }
};
