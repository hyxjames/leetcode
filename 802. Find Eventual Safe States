class Solution {
public:
    vector<int> eventualSafeNodes(vector<vector<int>>& graph) {
        vector<int> color(graph.size(),0);
        vector<int> result;
        for(int i=0;i<graph.size();i++){
            if(dfs(i, graph, color)) result.push_back(i);
        }
        return result;
    }
    
    bool dfs(int node, vector<vector<int>>& graph, vector<int>& color){
        if(color[node]>0) return color[node]==2;
        color[node] = 1;
        for(int i=0;i<graph[node].size();i++){
            if(color[node]==2) continue;
            if(!dfs(graph[node][i], graph, color)) return false;
        }
        color[node] = 2;
        return true;
    }
};
