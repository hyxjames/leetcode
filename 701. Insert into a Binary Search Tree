/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* insertIntoBST(TreeNode* root, int val) {
        if(root->left==NULL && root->right==NULL){
            TreeNode* node = new TreeNode(val);
            if(val<root->val){
                root->left = node;
            } else{
                root->right = node;
            }
        } else if(root->right==NULL){
            if(val < root->val){
                insertIntoBST(root->left, val);
            } else{
                TreeNode* node = new TreeNode(val);
                if(val > root->val){
                    root->right = node;
                }
            }
        } else if(root->left==NULL){
            if(val > root->val){
                insertIntoBST(root->right, val);
            } else{
                TreeNode* node = new TreeNode(val);
                if(val<root->val){
                    root->left = node;
                }
            }
        } else{
            if(val > root->val){
                insertIntoBST(root->right, val);
            } else{
                insertIntoBST(root->left, val);
            }
        }
        return root;
    }
};
