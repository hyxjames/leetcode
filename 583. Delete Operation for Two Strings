class Solution {
public:
    int minDistance(string word1, string word2) {
        if(word1.size()==0 && word2.size()==0){
            return 0;
        } else if(word1.size()==0 || word2.size()==0){
            return 1;
        }
        int dp[word1.size()+1][word2.size()+1] = {0};
        for(int i=0;i<=word1.size();i++){
            for(int j=0;j<=word2.size();j++){
                dp[i][j] = 0;
            }
        }
        for(int i=0;i<word1.size();i++){
            for(int j=0;j<word2.size();j++){
                if(word1[i] == word2[j]){
                    dp[i+1][j+1] = dp[i][j]+1;
                } else{
                    dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);
                }
                //cout<<dp[i][j]<<", ";
            }
            //cout<<endl;
        }
        return word1.size()+word2.size()-2*dp[word1.size()][word2.size()];
    }
};
