/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        int d = 0;
        helper(root, d);
        return d;
    }
    
    int helper(TreeNode* root, int& d){
        if(root == NULL){
            return 0;
        } else if(root->left==NULL && root->right==NULL){
            d = d>0?d:0;
            return 0;
        } else if(root->left==NULL){
            int res = 1+helper(root->right, d);
            d = d>res?d:res;
            return res;
        } else if(root->right==NULL){
            int res = 1+helper(root->left, d);
            d = d>res?d:res;
            return res;
        } else{
            int left = helper(root->left, d);
            int right = helper(root->right, d);
            int res = max(d, 2+left+right);
            //cout<<root->val<<": "<<left<<", "<<right<<", "<<res<<endl;
            d = d>res?d:res;
            return max(1+left, 1+right);
        }
    }
};
