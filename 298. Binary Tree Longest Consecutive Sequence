/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int longestConsecutive(TreeNode* root) {
        int res = 0;
        helper(root, res);
        return res;
    }
    
    int helper(TreeNode* root, int& maxVal) {
        if(root == NULL){
            return 0;
        } else{
            int left = 0;
            int right = 0;
            if(root->left == NULL && root->right==NULL){
                maxVal = max(maxVal,1);
                return 1;
            } else{
                int res = 1;
                if(root->left != NULL){
                    left = helper(root->left, maxVal);
                    if(root->val == root->left->val-1){
                        res = max(res, left+1);
                        maxVal = max(res, maxVal);
                    }
                }
                if(root->right != NULL){
                    right = helper(root->right, maxVal);
                    if(root->val == root->right->val-1){
                        res = max(res, right+1);
                        maxVal = max(res, maxVal);
                    }
                }
                return res;
            }
        }
    }
};
