class Solution {
public:
    void solve(vector<vector<char>>& board) {
        if(board.size()==0)
            return;
        for(int i=0;i<board.size();i++){
            if(board[i][0] == 'O'){
                dfs(board, i, 0);
            }
            if(board[i][board[0].size()-1] == 'O'){
                dfs(board, i, board[0].size()-1);
            }
        }
        for(int j=0;j<board[0].size();j++){
            if(board[0][j] == 'O'){
                dfs(board, 0 ,j);
            }
            if(board[board.size()-1][j] == 'O'){
                dfs(board, board.size()-1, j);
            }
        }
        for(int i=0;i<board.size();i++){
            for(int j=0;j<board[0].size();j++){
                if(board[i][j]=='o'){
                    board[i][j]='O';
                } else{
                    board[i][j]='X';
                }
            }
        }
    }
    
    void dfs(vector<vector<char>>& board, int i, int j){
        int i1 = i-1;
        int i2 = i+1;
        int j1 = j-1;
        int j2 = j+1;
        board[i][j] = 'o';
        if(i1>=0 && board[i1][j]=='O'){
            dfs(board, i1, j);
        }
        if(i2<board.size() && board[i2][j]=='O'){
            dfs(board, i2, j);
        }
        if(j1>=0 && board[i][j1]=='O'){
            dfs(board,i,j1);
        }
        if(j2<board[0].size() && board[i][j2]=='O'){
            dfs(board,i,j2);
        }
    }
};
